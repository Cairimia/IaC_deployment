### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###
name: 'Apply_TF_Plan'
on:
  workflow_call:
    inputs:
      environments:
        description: 'Environment prefix to deploy into'
        required: true
        type: string
      trigger_event:
        description: 'Trigger event for workflow'
        required: true
        type: string
      env_path:
        description: 'Environment path'
        required: true
        type: string
    secrets:
      DEV_CREDENTIALS: 
        description: 'Specifies the Azure DEV CREDS.'
        required: true
      PRE_CREDENTIALS: 
        description: 'Specifies the Azure PRE CREDS.'
        required: true
      PRO_CREDENTIALS:
        description: 'Specifies the Azure PRO CREDS.'
        required: true
        
env:
  RESOURCE_GROUP: IaC-Deployment-RG-${{ inputs.environments }}
  STORAGE_ACCOUNT: iacsa${{ inputs.environments }}
  CONTAINER_NAME: tfstateiac
  TF_KEY: terraform.${{ inputs.environments }}.tfstate
  TF_VARS: ${{ inputs.environments }}.tfvars
  ROOT_TERRAFORM_MODULE: 'IaC/terraform/${{ inputs.environments }}'
  ###AZURE Client details###
  DEV_CREDENTIALS: ${{ secrets.DEV_CREDENTIALS }}
  PRE_CREDENTIALS: ${{ secrets.PRE_CREDENTIALS }}
  PRO_CREDENTIALS: ${{ secrets.PRO_CREDENTIALS }}

jobs:
  apply-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.ROOT_TERRAFORM_MODULE }}

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.TF_KEY }}
          path: ${{ env.ROOT_TERRAFORM_MODULE }}

      - name: Decompress TF Plan artifact
        run: unzip ${{ env.TF_KEY }}.zip

      - name: Az Login
        run:
          az login --allow-no-subscriptions

      - name: Terraform Init
        id: init
        run: terraform init -migrate-state --backend-config="storage_account_name=$STORAGE_ACCOUNT" --backend-config="container_name=$CONTAINER_NAME" --backend-config="resource_group_name=$RESOURCE_GROUP" --backend-config="key=$TF_KEY"

      - name: Terraform Apply
        run: terraform apply plan.tfplan